@model scenario.Models.Thread
@{
    ViewBag.Title = "Tworzenie wątku";

}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Thread</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Story)
        </div>
        <div class="editor-field">
            @Html.DropDownList("StoryId", String.Empty)
            @Html.ValidationMessageFor(model => model.StoryId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Parents)
        </div>
        <div class="editor-field">
            @Html.ListBox("Parents")
            @Html.ValidationMessageFor(model => model.Parents)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Characters)
        </div>
        <div class="editor-field">
            @Html.ListBox("Characters")
            @Html.ValidationMessageFor(model => model.Characters)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StartDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StartDate)
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StopDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StopDate)
            @Html.ValidationMessageFor(model => model.StopDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Text)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Text, 20, 25, null)
            @Html.ValidationMessageFor(model => model.Text)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Main)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Main)
            @Html.ValidationMessageFor(model => model.Main)
        </div>

        <p>
            <input type="submit" value="Utwórz" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Wróć do listy", "Index")
</div>

@*
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
*@
